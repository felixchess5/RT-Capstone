[tool:pytest]
# Pytest configuration for RT-Capstone Assignment Grading System

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 8.0

# Add source directory to Python path
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=35
    --html=reports/pytest_report.html
    --self-contained-html
    --json-report
    --json-report-file=reports/pytest_report.json
    --maxfail=5
    --durations=10

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end tests for complete workflows
    slow: Tests that take more than 5 seconds
    llm: Tests that require LLM API calls
    gradio: Tests for Gradio web interface
    mcp: Tests for MCP server functionality
    math: Tests for math processing
    spanish: Tests for Spanish processing
    science: Tests for science processing
    history: Tests for history processing
    file_processing: Tests for file processing
    async: Tests with async functionality
    mock: Tests using mocks/stubs
    regression: Regression tests for bug fixes
    security: Security-related tests
    performance: Performance benchmarking tests

# Async test configuration
asyncio_mode = auto

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*platform.dist.*:DeprecationWarning
    ignore:.*imp module.*:DeprecationWarning
    error::UserWarning

# Test timeout (in seconds)
timeout = 300

# Parallel execution settings (configured in main addopts above)

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test file patterns to ignore
ignore =
    src/
    venv/
    .git/
    __pycache__/
    *.pyc
    .pytest_cache/

